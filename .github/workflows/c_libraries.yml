name: C libraries

on:
  # Run manually with GitHub actions.
  workflow_dispatch:
  #push:
    # branches:
    #  - master

jobs:
  windows:
    name: Windows
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with: 
          submodules: recursive
      - name: Install MSYS2
        uses: msys2/setup-msys2@v2
        with:
          update: true
          msystem: CLANG64
          install: >-
            mingw-w64-clang-x86_64-clang
            mingw-w64-clang-x86_64-cmake
            mingw-w64-clang-x86_64-ninja
      - name: Build
        run: |
          mkdir build
          cd build
          export CC=clang
          export CXX=clang++
          cmake -G Ninja -DCMAKE_BUILD_TYPE=Release ..
          ninja
      - name: Prepare output
        run: |
          mkdir output
          mv build/libcimgui.a output/libcimgui.a
          mv build/thirdparty/glad/libglad.a output/libglad.a
          mv build/thirdparty/glfw/src/libglfw3.a output/libglfw3.a
      - name: 'Upload artifact to GitHub'
        uses: actions/upload-artifact@v4
        with:
          name: windows
          path: output
          retention-days: 1

  linux:
    name: Linux
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with: 
          submodules: recursive
      - name: Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y clang cmake ninja-build git
          sudo apt-get install -y libx11-dev libxrandr-dev libxinerama-dev libxcursor-dev libxi-dev libgl-dev
      - name: Build
        run: |
          mkdir build
          cd build
          cmake -G Ninja -DCMAKE_BUILD_TYPE=Release ..
          ninja
      - name: Prepare output
        run: |
          mkdir output
          mv build/libcimgui.a output/libcimgui.a
          mv build/thirdparty/glad/libglad.a output/libglad.a
          mv build/thirdparty/glfw/src/libglfw3.a output/libglfw3.a
      - name: 'Upload artifact to GitHub'
        uses: actions/upload-artifact@v4
        with:
          name: linux
          path: output
          retention-days: 1

  macOSamd64:
    name: MacOS amd64
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with: 
          submodules: recursive
      - name: Dependencies
        run: |
          rm /usr/local/bin/2to3
          rm /usr/local/bin/2to3-3.11
          rm /usr/local/bin/idle3
          rm /usr/local/bin/pydoc3
          rm /usr/local/bin/python3
          rm /usr/local/bin/python3-config
          brew install llvm ninja || true
          export CC=/usr/local/opt/llvm/bin/clang
          export CXX=/usr/local/opt/llvm/bin/clang++
          export PATH="/usr/local/opt/ninja/bin:$PATH"
          export LDFLAGS="-L/usr/local/opt/llvm/lib -L/usr/local/opt/llvm/lib/c++ -Wl,-rpath,/usr/local/opt/llvm/lib/c++"
          export CPPFLAGS="-I/usr/local/opt/llvm/include"
      - name: Build
        run: |
          mkdir build
          cd build
          cmake -G Ninja -DCMAKE_BUILD_TYPE=Release ..
          ninja
      - name: Prepare output
        run: |
          mkdir output
          mv build/libcimgui.a output/libcimgui.a
          mv build/thirdparty/glad/libglad.a output/libglad.a
          mv build/thirdparty/glfw/src/libglfw3.a output/libglfw3.a
      - name: 'Upload artifact to GitHub'
        uses: actions/upload-artifact@v4
        with:
          name: macos-amd64
          path: output
          retention-days: 1
          
  macOSarm64:
    name: MacOS arm64
    runs-on: macos-latest-xlarge
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with: 
          submodules: recursive
      - name: Dependencies
        run: |
          rm /usr/local/bin/2to3
          rm /usr/local/bin/2to3-3.11
          rm /usr/local/bin/idle3
          rm /usr/local/bin/pydoc3
          rm /usr/local/bin/python3
          rm /usr/local/bin/python3-config
          brew install llvm ninja || true
          export CC=/usr/local/opt/llvm/bin/clang
          export CXX=/usr/local/opt/llvm/bin/clang++
          export PATH="/usr/local/opt/ninja/bin:$PATH"
          export LDFLAGS="-L/usr/local/opt/llvm/lib -L/usr/local/opt/llvm/lib/c++ -Wl,-rpath,/usr/local/opt/llvm/lib/c++"
          export CPPFLAGS="-I/usr/local/opt/llvm/include"
      - name: Build
        run: |
          mkdir build
          cd build
          cmake -G Ninja -DCMAKE_BUILD_TYPE=Release ..
          ninja
      - name: Prepare output
        run: |
          mkdir output
          mv build/libcimgui.a output/libcimgui.a
          mv build/thirdparty/glad/libglad.a output/libglad.a
          mv build/thirdparty/glfw/src/libglfw3.a output/libglfw3.a
      - name: 'Upload artifact to GitHub'
        uses: actions/upload-artifact@v4
        with:
          name: macos-arm64
          path: output
          retention-days: 1